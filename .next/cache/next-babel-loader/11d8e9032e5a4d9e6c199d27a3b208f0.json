{"ast":null,"code":"import _extends from \"/home/tywa/Documents/Freelance/MySite/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/home/tywa/Documents/Freelance/MySite/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/home/tywa/Documents/Freelance/MySite/components/ActiveLink.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { Children } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\n\nvar ActiveLink = function ActiveLink(_ref) {\n  _s();\n\n  var children = _ref.children,\n      activeClassName = _ref.activeClassName,\n      props = _objectWithoutProperties(_ref, [\"children\", \"activeClassName\"]);\n\n  var _useRouter = useRouter(),\n      asPath = _useRouter.asPath;\n\n  var child = Children.only(children);\n  var childClassName = child.props.className || '';\n  var className = asPath === props.href || asPath === props.as ? \"\".concat(childClassName, \" \").concat(activeClassName).trim() : childClassName;\n  return __jsx(Link, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.cloneElement(child, {\n    className: className || null\n  }));\n};\n\n_s(ActiveLink, \"9pMG9Ra3x5O/yaZiUz6XxVJ+Rds=\", false, function () {\n  return [useRouter];\n});\n\n_c = ActiveLink;\nexport default ActiveLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActiveLink\");","map":{"version":3,"sources":["/home/tywa/Documents/Freelance/MySite/components/ActiveLink.js"],"names":["React","Children","Link","useRouter","ActiveLink","children","activeClassName","props","asPath","child","only","childClassName","className","href","as","trim","cloneElement"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,IAAMC,UAAU,GACf,SADKA,UACL,OAA6C;AAAA;;AAAA,MAA1CC,QAA0C,QAA1CA,QAA0C;AAAA,MAAhCC,eAAgC,QAAhCA,eAAgC;AAAA,MAAZC,KAAY;;AAAA,mBACzBJ,SAAS,EADgB;AAAA,MACpCK,MADoC,cACpCA,MADoC;;AAE5C,MAAMC,KAAK,GAAGR,QAAQ,CAACS,IAAT,CAAcL,QAAd,CAAd;AACA,MAAMM,cAAc,GAAGF,KAAK,CAACF,KAAN,CAAYK,SAAZ,IAAyB,EAAhD;AAEA,MAAMA,SAAS,GACbJ,MAAM,KAAKD,KAAK,CAACM,IAAjB,IAAyBL,MAAM,KAAKD,KAAK,CAACO,EAA1C,GACE,UAAGH,cAAH,cAAqBL,eAArB,EAAuCS,IAAvC,EADF,GAEEJ,cAHJ;AAKA,SACE,MAAC,IAAD,eAAUJ,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACGP,KAAK,CAACgB,YAAN,CAAmBP,KAAnB,EAA0B;AAAEG,IAAAA,SAAS,EAAEA,SAAS,IAAI;AAA1B,GAA1B,CADH,CADF;AAKD,CAhBD;;GAAMR,U;UAEeD,S;;;KAFfC,U;AAiBN,eAAeA,UAAf","sourcesContent":["import React, { Children } from 'react'\nimport Link from 'next/link'\nimport { useRouter } from 'next/router'\n\nconst ActiveLink = \n ({ children, activeClassName, ...props }) => {\n  const { asPath } = useRouter()\n  const child = Children.only(children)\n  const childClassName = child.props.className || ''\n\n  const className = \n    asPath === props.href || asPath === props.as\n    ? `${childClassName} ${activeClassName}`.trim()\n    : childClassName\n\n  return (\n    <Link {...props}>\n      {React.cloneElement(child, { className: className || null })}\n    </Link>\n  )\n}\nexport default ActiveLink"]},"metadata":{},"sourceType":"module"}