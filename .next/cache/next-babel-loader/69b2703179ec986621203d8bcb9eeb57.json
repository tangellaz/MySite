{"ast":null,"code":"import _objectWithoutProperties from \"/home/tywa/Documents/Freelance/MySite/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _readOnlyError from \"/home/tywa/Documents/Freelance/MySite/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tywa/Documents/Freelance/MySite/components/Link.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { Children } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\n\nvar ActiveLink = function ActiveLink(_ref) {\n  _s();\n\n  var children = _ref.children,\n      activeClassName = _ref.activeClassName,\n      props = _objectWithoutProperties(_ref, [\"children\", \"activeClassName\"]);\n\n  var _useRouter = useRouter(),\n      asPath = _useRouter.asPath;\n\n  var child = children.only(children);\n  var childClassName = child.props.className || '';\n  var className = asPath === props.href || asPath === props.as ? \"\".concat(childClassName, \" \").concat(activeClassName).trim() : childClassName; // let className = children.props.className || ''\n  // console.log('LOGGGGG')\n  // console.log('className=',className)\n\n  if (router.pathname === href) {\n    // className = `${className} selected`;\n    className = (_readOnlyError(\"className\"), \"\".concat(className, \" \").concat(activeClassName).trim()); // className = `${className}-selected`;\n    // className = `${className}`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Link, {\n    href: href,\n    children: /*#__PURE__*/React.cloneElement(children, {\n      className: className || null\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ActiveLink, \"2F48WNebuXCpWV2Gp8hgxMpYgEU=\", false, function () {\n  return [useRouter];\n});\n\n_c = ActiveLink;\nexport default ActiveLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActiveLink\");","map":{"version":3,"sources":["/home/tywa/Documents/Freelance/MySite/components/Link.js"],"names":["React","Children","Link","useRouter","ActiveLink","children","activeClassName","props","asPath","child","only","childClassName","className","href","as","trim","router","pathname","cloneElement"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,IAAMC,UAAU,GACf,SADKA,UACL,OAA6C;AAAA;;AAAA,MAA1CC,QAA0C,QAA1CA,QAA0C;AAAA,MAAhCC,eAAgC,QAAhCA,eAAgC;AAAA,MAAZC,KAAY;;AAAA,mBAC1BJ,SAAS,EADiB;AAAA,MACpCK,MADoC,cACpCA,MADoC;;AAE5C,MAAMC,KAAK,GAAGJ,QAAQ,CAACK,IAAT,CAAcL,QAAd,CAAd;AACA,MAAMM,cAAc,GAAGF,KAAK,CAACF,KAAN,CAAYK,SAAZ,IAAyB,EAAhD;AAEA,MAAMA,SAAS,GACbJ,MAAM,KAAKD,KAAK,CAACM,IAAjB,IAAyBL,MAAM,KAAKD,KAAK,CAACO,EAA1C,GACE,UAAGH,cAAH,cAAqBL,eAArB,EAAuCS,IAAvC,EADF,GAEEJ,cAHJ,CAL4C,CAU5C;AACA;AACA;;AAGA,MAAIK,MAAM,CAACC,QAAP,KAAoBJ,IAAxB,EAA8B;AAC5B;AACAD,IAAAA,SAAS,iCAAG,UAAGA,SAAH,cAAgBN,eAAhB,EAAkCS,IAAlC,EAAH,CAAT,CAF4B,CAG5B;AACA;AACD;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,IAAI,EAAEF,IAAZ;AAAA,2BACGb,KAAK,CAACkB,YAAN,CAAmBb,QAAnB,EAA6B;AAAEO,MAAAA,SAAS,EAAEA,SAAS,IAAI;AAA1B,KAA7B;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CA5BD;;GAAMR,U;UAEcD,S;;;KAFdC,U;AA6BN,eAAeA,UAAf","sourcesContent":["import React, { Children } from 'react'\nimport Link from 'next/link'\nimport { useRouter } from 'next/router'\n\nconst ActiveLink = \n ({ children, activeClassName, ...props }) => {\n  const { asPath} = useRouter()\n  const child = children.only(children)\n  const childClassName = child.props.className || ''\n\n  const className = \n    asPath === props.href || asPath === props.as\n    ? `${childClassName} ${activeClassName}`.trim()\n    : childClassName\n\n  // let className = children.props.className || ''\n  // console.log('LOGGGGG')\n  // console.log('className=',className)\n\n\n  if (router.pathname === href) {\n    // className = `${className} selected`;\n    className = `${className} ${activeClassName}`.trim();\n    // className = `${className}-selected`;\n    // className = `${className}`;\n  }\n\n  return (\n    <Link href={href}>\n      {React.cloneElement(children, { className: className || null })}\n    </Link>\n  )\n}\nexport default ActiveLink"]},"metadata":{},"sourceType":"module"}