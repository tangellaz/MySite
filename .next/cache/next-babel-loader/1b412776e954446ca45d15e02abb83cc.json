{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/tywa/Documents/Freelance/MySite/components/Link.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { Children } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\n\nconst ActiveLink = (_ref) => {\n  let {\n    children,\n    activeClassName\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\", \"activeClassName\"]);\n\n  const {\n    asPath\n  } = useRouter();\n  const child = children.only(children);\n  const childClassName = child.props.className || '';\n  const className = asPath === props.href || asPath === props.as ? `${childClassName} ${activeClassName}`.trim() : childClassName; // let className = children.props.className || ''\n  // console.log('LOGGGGG')\n  // console.log('className=',className)\n\n  if (router.pathname === href) {\n    // className = `${className} selected`;\n    className = `${className} ${activeClassName}`.trim(); // className = `${className}-selected`;\n    // className = `${className}`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Link, _objectSpread(_objectSpread({}, props), {}, {\n    children: /*#__PURE__*/React.cloneElement(child, {\n      className: className || null\n    })\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ActiveLink;","map":{"version":3,"sources":["/home/tywa/Documents/Freelance/MySite/components/Link.js"],"names":["React","Children","Link","useRouter","ActiveLink","children","activeClassName","props","asPath","child","only","childClassName","className","href","as","trim","router","pathname","cloneElement"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,UAAU,GACf,UAA6C;AAAA,MAA5C;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA4C;AAAA,MAAZC,KAAY;;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAAYL,SAAS,EAA3B;AACA,QAAMM,KAAK,GAAGJ,QAAQ,CAACK,IAAT,CAAcL,QAAd,CAAd;AACA,QAAMM,cAAc,GAAGF,KAAK,CAACF,KAAN,CAAYK,SAAZ,IAAyB,EAAhD;AAEA,QAAMA,SAAS,GACbJ,MAAM,KAAKD,KAAK,CAACM,IAAjB,IAAyBL,MAAM,KAAKD,KAAK,CAACO,EAA1C,GACG,GAAEH,cAAe,IAAGL,eAAgB,EAArC,CAAuCS,IAAvC,EADF,GAEEJ,cAHJ,CAL4C,CAU5C;AACA;AACA;;AAGA,MAAIK,MAAM,CAACC,QAAP,KAAoBJ,IAAxB,EAA8B;AAC5B;AACAD,IAAAA,SAAS,GAAI,GAAEA,SAAU,IAAGN,eAAgB,EAAhC,CAAkCS,IAAlC,EAAZ,CAF4B,CAG5B;AACA;AACD;;AAED,sBACE,QAAC,IAAD,kCAAUR,KAAV;AAAA,2BACGP,KAAK,CAACkB,YAAN,CAAmBT,KAAnB,EAA0B;AAAEG,MAAAA,SAAS,EAAEA,SAAS,IAAI;AAA1B,KAA1B;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA5BD;;AA6BA,eAAeR,UAAf","sourcesContent":["import React, { Children } from 'react'\nimport Link from 'next/link'\nimport { useRouter } from 'next/router'\n\nconst ActiveLink = \n ({ children, activeClassName, ...props }) => {\n  const { asPath} = useRouter()\n  const child = children.only(children)\n  const childClassName = child.props.className || ''\n\n  const className = \n    asPath === props.href || asPath === props.as\n    ? `${childClassName} ${activeClassName}`.trim()\n    : childClassName\n\n  // let className = children.props.className || ''\n  // console.log('LOGGGGG')\n  // console.log('className=',className)\n\n\n  if (router.pathname === href) {\n    // className = `${className} selected`;\n    className = `${className} ${activeClassName}`.trim();\n    // className = `${className}-selected`;\n    // className = `${className}`;\n  }\n\n  return (\n    <Link {...props}>\n      {React.cloneElement(child, { className: className || null })}\n    </Link>\n  )\n}\nexport default ActiveLink"]},"metadata":{},"sourceType":"module"}