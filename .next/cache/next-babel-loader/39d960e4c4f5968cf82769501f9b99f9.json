{"ast":null,"code":"import _regeneratorRuntime from \"/home/tywa/Documents/Freelance/MySite/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/tywa/Documents/Freelance/MySite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport Navigation from '../components/Navigation';\nimport NavigationFooter from '../components/NavigationFooter';\nimport styles from '../styles/home.module.css';\nimport StylesContact from '../static/StylesContact';\nimport React, { useState } from 'react';\n\nvar Contact = function Contact() {\n  var _useState = useState(\"\"),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      email = _useState3[0],\n      setEmail = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      color = _useState4[0],\n      setColor = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      honeypot = _useState5[0],\n      setHoneypot = _useState5[1]; // get all data in form and return object\n\n\n  function getFormData(form) {\n    var elements = form.elements;\n    var honeypot;\n    var fields = Object.keys(elements).filter(function (k) {\n      if (elements[k].name === \"honeypot\") {\n        honeypot = elements[k].value;\n        return false;\n      }\n\n      return true;\n    }).map(function (k) {\n      if (elements[k].name !== undefined) {\n        return elements[k].name; // special case for Edge's html collection\n      } else if (elements[k].length > 0) {\n        return elements[k].item(0).name;\n      }\n    }).filter(function (item, pos, self) {\n      return self.indexOf(item) == pos && item;\n    });\n    var formData = {};\n    fields.forEach(function (name) {\n      var element = elements[name]; // singular form elements just have one value\n\n      formData[name] = element.value; // when our element has multiple items, get their values\n\n      if (element.length) {\n        var data = [];\n\n        for (var i = 0; i < element.length; i++) {\n          var item = element.item(i);\n\n          if (item.checked || item.selected) {\n            data.push(item.value);\n          }\n        }\n\n        formData[name] = data.join(', ');\n      }\n    }); // add form-specific values into the data\n\n    console.log(\"0 fields=\", fields);\n    console.log(\"0 type(fields)=\", typeof fields);\n    formData.formDataNameOrder = JSON.stringify(fields);\n    console.log(\"1 formDataNameOrder=\", formData.formDataNameOrder);\n    console.log(\"1 Type(formDataNameOrder)=\", typeof formData.formDataNameOrder);\n    formData.formGoogleSheetName = form.dataset.sheet || \"responses\"; // default sheet name\n\n    formData.formGoogleSendEmail = form.dataset.email || \"\"; // no email by default\n\n    return {\n      data: formData,\n      honeypot: honeypot\n    };\n  }\n\n  function handleFormSubmit(event) {\n    // handles form submit without any jquery\n    event.preventDefault(); // we are submitting via xhr below\n\n    var form = event.target;\n    var formData = getFormData(form);\n    var data = formData.data;\n    console.log('data=', data);\n    console.log(\"2 formDataNameOrder=\", data.formDataNameOrder);\n    console.log(\"2 Type(formDataNameOrder)=\", typeof data.formDataNameOrder); // If a honeypot field is filled, assume it was done so by a spam bot.\n\n    if (formData.honeypot) {\n      return false;\n    } // disableAllButtons(form);\n    // var url = form.action;\n\n\n    var url = 'https://script.google.com/macros/s/AKfycbxT1I9HS2PVjAVM6wlGG1bDhROXSDifsm7mI-x0qH9U_rgwSQ0tbWTeAA/exec';\n    var xhr = new XMLHttpRequest();\n    xhr.open('POST', url); // xhr.withCredentials = true;\n\n    xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\"); // xhr.onreadystatechange = function() {\n    //     if (xhr.readyState === 4 && xhr.status === 200) {\n    //       form.reset();\n    //       var formElements = form.querySelector(\".form-elements\")\n    //       if (formElements) {\n    //         formElements.style.display = \"none\"; // hide form\n    //       }\n    //       var thankYouMessage = form.querySelector(\".thankyou_message\");\n    //       if (thankYouMessage) {\n    //         thankYouMessage.style.display = \"block\";\n    //       }\n    //     }\n    // };\n    // url encode form data for sending as post data\n\n    var encoded = Object.keys(data).map(function (k) {\n      return encodeURIComponent(k) + \"=\" + encodeURIComponent(data[k]);\n    }).join('&');\n    console.log('encoded=', encoded);\n    console.log('encodedType=', typeof encoded);\n    xhr.send(encoded);\n  }\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var fields, data, encoded, encodedData, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              if (!(honeypot != \"\")) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\", false);\n\n            case 3:\n              fields = [\"name\", \"message\", \"email\", \"color\"];\n              data = {\n                name: name,\n                message: message,\n                email: email,\n                color: color,\n                formDataNameOrder: JSON.stringify(fields),\n                formGoogleSheetName: \"responses\",\n                formGoogleSendEmail: \"\"\n              };\n              console.log(\"data=\", data);\n              encoded = Object.keys(data).map(function (k) {\n                return encodeURIComponent(k) + \"=\" + encodeURIComponent(data[k]);\n              }).join('&');\n              console.log('encoded=', encoded);\n              console.log('encodedType=', typeof encoded);\n              encodedData = Object.keys(data).map(function (k) {\n                return encodeURIComponent(k) + \"=\" + encodeURIComponent(data[k]);\n              }).join('&');\n              console.log('encodedData=', encodedData);\n              console.log('encodedType=', typeof encodedData);\n              console.log('ANSWER =');\n              console.log(\"name=aa&message=a&email=a%40mail.com&color=a&formDataNameOrder=%5B%22name%22%2C%22message%22%2C%22email%22%2C%22color%22%5D&formGoogleSheetName=responses&formGoogleSendEmail=\"); // CORS preflight is not available for POST requests when Content-Type is application/x-www-form-urlencoded\n              // https://security.stackexchange.com/questions/187311/why-cors-preflight-is-not-available-for-post-requests-when-content-type-is-appli\n\n              res = fetch('https://script.google.com/macros/s/AKfycbxT1I9HS2PVjAVM6wlGG1bDhROXSDifsm7mI-x0qH9U_rgwSQ0tbWTeAA/exec', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: encodedData\n              }).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                return console.log(data);\n              })[\"catch\"](function (error) {\n                return console.log(error);\n              }); // const result = await res.json()\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(); //  const handleChange = event => {\n  // // This triggers everytime the input is changed\n  //     console.log(\"name_before= \", name)\n  //     console.log(\"EVENT_before=\",event.target.value)\n  //     setName(\n  //        event.target.value\n  //     );\n  //     console.log(\"EVENT_after=\",event.target.value)\n  //     console.log(\"name_after= \", name)\n  //   };\n\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"Contact\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"viewport\",\n        content: \"initial-scale=1.0, width=device-width\"\n      })]\n    }), /*#__PURE__*/_jsx(\"header\", {\n      className: styles.header,\n      children: /*#__PURE__*/_jsx(\"div\", {\n        id: \"navbar\",\n        children: /*#__PURE__*/_jsx(Navigation, {})\n      })\n    }), /*#__PURE__*/_jsxs(\"main\", {\n      children: [/*#__PURE__*/_jsx(\"h2\", {\n        \"class\": \"content-head is-center\",\n        children: \"Contact Us!\"\n      }), /*#__PURE__*/_jsxs(\"aside\", {\n        children: [/*#__PURE__*/_jsxs(\"p\", {\n          children: [\"We would \", /*#__PURE__*/_jsx(\"em\", {\n            children: \"love\"\n          }), \" to hear from you! \"]\n        }), /*#__PURE__*/_jsxs(\"p\", {\n          children: [\"Please use the \", /*#__PURE__*/_jsx(\"b\", {\n            children: /*#__PURE__*/_jsx(\"em\", {\n              children: \"Contact Form\"\n            })\n          }), \"to send us a message.\"]\n        })]\n      }), /*#__PURE__*/_jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://unpkg.com/purecss@1.0.0/build/pure-min.css\"\n      }), /*#__PURE__*/_jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css\"\n      }), /*#__PURE__*/_jsxs(\"form\", {\n        \"class\": \"gform pure-form pure-form-stacked\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          \"class\": \"form-elements\",\n          children: [/*#__PURE__*/_jsxs(\"fieldset\", {\n            \"class\": \"pure-group\",\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              htmlFor: \"name\",\n              children: \"Name: \"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              id: \"name\",\n              name: \"name\",\n              placeholder: \"What your Mom calls you\",\n              onChange: function onChange(e) {\n                return setName(e.target.value);\n              }\n            })]\n          }), /*#__PURE__*/_jsxs(\"fieldset\", {\n            \"class\": \"pure-group\",\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              htmlFor: \"message\",\n              children: \"Message: \"\n            }), /*#__PURE__*/_jsx(\"textarea\", {\n              id: \"message\",\n              name: \"message\",\n              rows: \"10\",\n              placeholder: \"Tell us what's on your mind...\",\n              onChange: function onChange(e) {\n                return setMessage(e.target.value);\n              }\n            })]\n          }), /*#__PURE__*/_jsxs(\"fieldset\", {\n            \"class\": \"pure-group\",\n            children: [/*#__PURE__*/_jsxs(\"label\", {\n              htmlFor: \"email\",\n              children: [/*#__PURE__*/_jsx(\"em\", {\n                children: \"Your\"\n              }), \" Email Address:\"]\n            }), /*#__PURE__*/_jsx(\"input\", {\n              id: \"email\",\n              name: \"email\",\n              type: \"email\",\n              required: true,\n              placeholder: \"your.name@email.com\",\n              onChange: function onChange(e) {\n                return setEmail(e.target.value);\n              }\n            })]\n          }), /*#__PURE__*/_jsxs(\"fieldset\", {\n            \"class\": \"pure-group\",\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              htmlFor: \"color\",\n              children: \"Favourite Color: \"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              id: \"color\",\n              name: \"color\",\n              placeholder: \"green\",\n              onChange: function onChange(e) {\n                return setColor(e.target.value);\n              }\n            })]\n          }), /*#__PURE__*/_jsxs(\"fieldset\", {\n            \"class\": \"pure-group honeypot-field\",\n            style: {\n              display: \"none\"\n            },\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              htmlFor: \"honeypot\",\n              children: \"To help avoid spam, utilize a Honeypot technique with a hidden text field; must be empty to submit the form! Otherwise, we assume the user is a spam bot.\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              id: \"honeypot\",\n              type: \"text\",\n              name: \"honeypot\",\n              onChange: function onChange(e) {\n                return setHoneypot(e.target.value);\n              }\n            })]\n          }), /*#__PURE__*/_jsxs(\"button\", {\n            \"class\": \"button-success pure-button button-xlarge\",\n            type: \"submit\",\n            children: [/*#__PURE__*/_jsx(\"i\", {\n              \"class\": \"fa fa-paper-plane\"\n            }), \"\\xA0Send\"]\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          \"class\": \"thankyou_message\",\n          style: {\n            display: \"none\"\n          },\n          children: /*#__PURE__*/_jsxs(\"h2\", {\n            children: [/*#__PURE__*/_jsx(\"em\", {\n              children: \"Thanks\"\n            }), \" For contacting us! We will get back to you soon!\"]\n          })\n        })]\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: styles.divider\n    }), /*#__PURE__*/_jsx(NavigationFooter, {})]\n  });\n};\n\nexport default Contact;","map":null,"metadata":{},"sourceType":"module"}