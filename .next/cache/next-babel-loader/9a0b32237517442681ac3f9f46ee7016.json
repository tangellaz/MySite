{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/tywa/Documents/Freelance/MySite/components/Link.js\";\nimport React from 'react'; // import Link from 'next/link'\n\nimport { useRouter } from 'next/router';\n\nconst Link = ({\n  href,\n  children\n}) => {\n  const router = useRouter();\n  let className = children.props.className || '';\n  console.log('LOGGGGG');\n  console.log('className=', className);\n\n  if (router.pathname === href) {// className = `${className} selected`;\n    // className = `${className}-selected`;\n    // className = `${className}`\n  }\n\n  return /*#__PURE__*/_jsxDEV(Link, {\n    href: href,\n    children: /*#__PURE__*/React.cloneElement(children, {\n      className\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 11\n  }, this);\n};\n\nexport default Link;","map":{"version":3,"sources":["/home/tywa/Documents/Freelance/MySite/components/Link.js"],"names":["React","useRouter","Link","href","children","router","className","props","console","log","pathname","cloneElement"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEC,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAwB;AACpC,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AAEA,MAAIK,SAAS,GAAGF,QAAQ,CAACG,KAAT,CAAeD,SAAf,IAA4B,EAA5C;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBH,SAAzB;;AACA,MAAID,MAAM,CAACK,QAAP,KAAoBP,IAAxB,EAA8B,CAC5B;AACA;AACA;AACD;;AAED,sBAAQ,QAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAA,2BAAmBH,KAAK,CAACW,YAAN,CAAmBP,QAAnB,EAA6B;AAAEE,MAAAA;AAAF,KAA7B;AAAnB;AAAA;AAAA;AAAA;AAAA,UAAR;AAGD,CAfA;;AAiBD,eAAeJ,IAAf","sourcesContent":["import React from 'react'\n// import Link from 'next/link'\nimport { useRouter } from 'next/router'\n\n const Link = ({ href, children }) => {\n  const router = useRouter()\n\n  let className = children.props.className || ''\n  console.log('LOGGGGG')\n  console.log('className=',className)\n  if (router.pathname === href) {\n    // className = `${className} selected`;\n    // className = `${className}-selected`;\n    // className = `${className}`\n  }\n\n  return (<Link href={href}>{React.cloneElement(children, { className })}</Link>\n\n    )\n}\n\nexport default Link"]},"metadata":{},"sourceType":"module"}