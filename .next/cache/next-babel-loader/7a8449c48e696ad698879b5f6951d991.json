{"ast":null,"code":"import React, { useState, useEffect } from 'react'; // Hook\n\nconst WindowSize = () => {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const {\n    0: windowSize,\n    1: setWindowSize\n  } = useState({\n    width: undefined,\n    height: undefined\n  });\n  useEffect(() => {\n    // only execute all the code below in client side\n    if (false) {\n      // Handler to call on window resize\n      function handleResize() {\n        // Set window width/height to state\n        setWindowSize({\n          width: window.innerWidth,\n          height: window.innerHeight\n        });\n      } // Add event listener\n\n\n      window.addEventListener(\"resize\", handleResize); // Call handler right away so state gets updated with initial window size\n\n      handleResize(); // Remove event listener on cleanup\n\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n};\n\nexport default WindowSize;","map":{"version":3,"sources":["/home/tywa/Documents/Freelance/MySite/components/WindowSize.js"],"names":["React","useState","useEffect","WindowSize","windowSize","setWindowSize","width","undefined","height","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;;AACA,MAAMC,UAAU,GAAG,MAAM;AACvB;AACA;AACA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BJ,QAAQ,CAAC;AAC3CK,IAAAA,KAAK,EAAEC,SADoC;AAE3CC,IAAAA,MAAM,EAAED;AAFmC,GAAD,CAA5C;AAKAL,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,eAAmC;AACjC;AACA,eAASO,YAAT,GAAwB;AACtB;AACAJ,QAAAA,aAAa,CAAC;AACZC,UAAAA,KAAK,EAAEI,MAAM,CAACC,UADF;AAEZH,UAAAA,MAAM,EAAEE,MAAM,CAACE;AAFH,SAAD,CAAb;AAID,OARgC,CAUjC;;;AACAF,MAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,YAAlC,EAXiC,CAajC;;AACAA,MAAAA,YAAY,GAdqB,CAgBjC;;AACA,aAAO,MAAMC,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCL,YAArC,CAAb;AACD;AACF,GArBQ,EAqBN,EArBM,CAAT,CARuB,CA6Bf;;AACR,SAAOL,UAAP;AACD,CA/BD;;AAiCA,eAAeD,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n// Hook\nconst WindowSize = () => {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // only execute all the code below in client side\n    if (typeof window !== 'undefined') {\n      // Handler to call on window resize\n      function handleResize() {\n        // Set window width/height to state\n        setWindowSize({\n          width: window.innerWidth,\n          height: window.innerHeight,\n        });\n      }\n    \n      // Add event listener\n      window.addEventListener(\"resize\", handleResize);\n     \n      // Call handler right away so state gets updated with initial window size\n      handleResize();\n    \n      // Remove event listener on cleanup\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}\n\nexport default WindowSize"]},"metadata":{},"sourceType":"module"}