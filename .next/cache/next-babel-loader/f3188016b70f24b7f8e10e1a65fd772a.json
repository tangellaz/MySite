{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tywa/Documents/Freelance/MySite/components/Link.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nexport default _s(function (_ref) {\n  _s();\n\n  var href = _ref.href,\n      children = _ref.children;\n  var router = useRouter();\n  var className = children.props.className || '';\n\n  if (router.pathname === href) {\n    className = \"\".concat(className, \" selected\"); // className = `${className}-selected`;\n    // className = `${className}`\n  }\n\n  return /*#__PURE__*/_jsxDEV(Link, {\n    href: href,\n    children: [\"Test\", /*#__PURE__*/React.cloneElement(children, {\n      className: className\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 11\n  }, _this);\n}, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});","map":{"version":3,"sources":["/home/tywa/Documents/Freelance/MySite/components/Link.js"],"names":["React","Link","useRouter","href","children","router","className","props","pathname","cloneElement"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,kBAAe,gBAAwB;AAAA;;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACrC,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AAEA,MAAII,SAAS,GAAGF,QAAQ,CAACG,KAAT,CAAeD,SAAf,IAA4B,EAA5C;;AACA,MAAID,MAAM,CAACG,QAAP,KAAoBL,IAAxB,EAA8B;AAC5BG,IAAAA,SAAS,aAAMA,SAAN,cAAT,CAD4B,CAE5B;AACA;AACD;;AAED,sBAAQ,QAAC,IAAD;AAAM,IAAA,IAAI,EAAEH,IAAZ;AAAA,oCAAuBH,KAAK,CAACS,YAAN,CAAmBL,QAAnB,EAA6B;AAAEE,MAAAA,SAAS,EAATA;AAAF,KAA7B,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,WAAR;AAGD,CAbD;AAAA,UACiBJ,SADjB;AAAA","sourcesContent":["import React from 'react'\nimport Link from 'next/link'\nimport { useRouter } from 'next/router'\n\nexport default ({ href, children }) => {\n  const router = useRouter()\n\n  let className = children.props.className || ''\n  if (router.pathname === href) {\n    className = `${className} selected`;\n    // className = `${className}-selected`;\n    // className = `${className}`\n  }\n\n  return (<Link href={href}>Test{React.cloneElement(children, { className })}</Link>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}