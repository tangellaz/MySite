import{Fragment as e,Component as t,options as r}from"preact";import{Suspense as o}from"preact/compat";function n(e,t){for(let r in t)e[r]=t[r];return e}function s(e,t){return Array.isArray(t)?t.reduce(s,e):null!=t&&!1!==t&&e.push(t),e}export default function p(i,l,_){if(null==i||"object"!=typeof i)return Promise.resolve();let c=i.type,a=i.props,u=[];if(_=_||{},"function"==typeof c&&c!==e&&c!==o){let e,o=i.__c=new t(a,_);o.__d=!0,o.__v=i,void 0===o.state&&(o.state={}),r.render&&r.render(i),r.__r&&r.__r(i);let s=!1,u=c.contextType,m=u&&_[u.__c],d=null!=u?m?m.props.value:u.__p||u.__:_;return c.prototype&&"function"==typeof c.prototype.render?(s=!0,o=i.__c=new c(a,d),o.__d=!0,o.__v=i,o.props=a,o.context=d,void 0===o.state&&(o.state={}),c.getDerivedStateFromProps?o.state=n(n({},o.state),c.getDerivedStateFromProps(o.props,o.state)):o.componentWillMount&&o.componentWillMount(),e=()=>{try{return Promise.resolve(o.render(o.props,o.state,o.context))}catch(t){return t&&t.then?t.then(e,e):Promise.reject(t)}}):e=()=>{try{const e=r.__s;r.__s=!0;const t=Promise.resolve(c.call(i.__c,a,d));return r.__s=e,t}catch(t){return t&&t.then?t.then(e,e):Promise.reject(t)}},(l?(l(i,s?o:void 0)||Promise.resolve()).then(e):e()).then(e=>(o.getChildContext&&(_=n(n({},_),o.getChildContext())),Array.isArray(e)?Promise.all(e.map(e=>p(e,l,_))):p(e,l,_)))}return a&&s(u=[],a.children).length?Promise.all(u.map(e=>p(e,l,_))):Promise.resolve()}
//# sourceMappingURL=index.module.js.map
